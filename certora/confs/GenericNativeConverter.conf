{
    "files": [
        "certora/harnesses/StorageExtension.sol",
        "certora/mocks/TokenMock.sol",
        "src/custom-tokens/GenericNativeConverter.sol",
        "src/custom-tokens/GenericCustomToken.sol",
        "src/MigrationManager.sol",
        "certora/mocks/ILxLyBridgeMock.sol",
    ],
    "global_timeout": "7200",
    "loop_iter": "1",
    "msg": "GenericNativeConverter",
    "mutations": {
        "gambit": [
            {
                "filename": "src/custom-tokens/GenericNativeConverter.sol",
                "num_mutants": 5
            }
        ]
    },
    "optimistic_hashing": true,
    "parametric_contracts": ["GenericNativeConverter"],
    "optimistic_loop": true,
    "packages": [
        "@types/bun=node_modules/@types/bun",
        "@0xpolygonhermez/zkevm-commonjs=node_modules/@0xpolygonhermez/zkevm-commonjs",
        "@openzeppelin-contracts-upgradeable=dependencies/@openzeppelin-contracts-upgradeable-5.1.0",
        "@openzeppelin-contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "@openzeppelin/contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "forge-std=dependencies/forge-std-1.9.4/src",
        // for zkmevm-contracts
        "@openzeppelin/contracts-upgradeable4=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable4",
        "@openzeppelin/contracts-upgradeable5=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable5",
        "@zkmcontractsv2=zkevm-contracts/contracts/v2",
    ],
    "process": "emv",
    "prover_args": [
        "-smt_initialSplitDepth 4",
        "-depth 10",
        "-mediumTimeout 2"
    ],
    "rule_sanity": "basic",
    "solc_map": {
        "StorageExtension": "solc8.29",
        "GenericNativeConverter": "solc8.29",
        "GenericCustomToken": "solc8.29",
        "MigrationManager": "solc8.29",
        "TokenMock": "solc8.28",
        "ILxLyBridgeMock": "solc8.29",
    },
    "solc_optimize": "200",
    "solc_via_ir": true,
    "storage_extension_harnesses": [
        "GenericNativeConverter=StorageExtension",
    ],
    "struct_link": [
        "GenericNativeConverter:customToken=GenericCustomToken",
        "GenericNativeConverter:underlyingToken=TokenMock",
    ],
    "server": "production",
    "verify": "GenericNativeConverter:certora/specs/GenericNativeConverter_invariants.spec"
}
