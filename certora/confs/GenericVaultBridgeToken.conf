{
    "assert_autofinder_success": true,
    "contract_extensions": {
        "GenericVaultBridgeToken": [ {
            "extension": "VaultBridgeTokenPart2",
            "exclude": [ "rebalanceReserve",
                "allowance", "approve", "asset", "backingDifference",
                "balanceOf", "claimAndRedeem", "convertToAssets",
                "convertToShares", "decimals", "DEFAULT_ADMIN_ROLE", "deposit",
                "depositAndBridge", "depositWithPermit",
                "depositWithPermitAndBridge", "DOMAIN_SEPARATOR",
                "eip712Domain", "getRoleAdmin", "grantRole", "hasRole",
                "lxlyBridge", "lxlyId", "maxDeposit", "maxMint", "maxRedeem",
                "maxWithdraw", "migrationFeesFund", "migrationManager",
                "minimumReservePercentage", "minimumYieldVaultDeposit", "mint",
                "name", "nonces", "paused", "PAUSER_ROLE",
                "performReversibleYieldVaultDeposit", "permit",
                "previewDeposit", "previewMint", "previewRedeem",
                "previewWithdraw", "REBALANCER_ROLE", "redeem", "renounceRole",
                "reservedAssets", "reservePercentage", "revokeRole",
                "stakedAssets", "supportsInterface", "symbol", "totalAssets",
                "totalSupply", "transfer", "transferFrom", "underlyingToken",
                "version", "withdraw", "yield", "YIELD_COLLECTOR_ROLE",
                "yieldRecipient", "yieldVault",
                "yieldVaultMaximumSlippagePercentage",
            ] },
        ],
        "VaultBridgeTokenInitializer": [ {
            "extension": "VaultBridgeTokenPart2",
            "exclude": [ "rebalanceReserve",
                "allowance", "approve", "asset", "backingDifference",
                "balanceOf", "claimAndRedeem", "convertToAssets",
                "convertToShares", "decimals", "DEFAULT_ADMIN_ROLE", "deposit",
                "depositAndBridge", "depositWithPermit",
                "depositWithPermitAndBridge", "DOMAIN_SEPARATOR",
                "eip712Domain", "getRoleAdmin", "grantRole", "hasRole",
                "lxlyBridge", "lxlyId", "maxDeposit", "maxMint", "maxRedeem",
                "maxWithdraw", "migrationFeesFund", "migrationManager",
                "minimumReservePercentage", "minimumYieldVaultDeposit", "mint",
                "name", "nonces", "paused", "PAUSER_ROLE",
                "performReversibleYieldVaultDeposit", "permit",
                "previewDeposit", "previewMint", "previewRedeem",
                "previewWithdraw", "REBALANCER_ROLE", "redeem", "renounceRole",
                "reservedAssets", "reservePercentage", "revokeRole",
                "stakedAssets", "supportsInterface", "symbol", "totalAssets",
                "totalSupply", "transfer", "transferFrom", "underlyingToken",
                "version", "withdraw", "yield", "YIELD_COLLECTOR_ROLE",
                "yieldRecipient", "yieldVault",
                "yieldVaultMaximumSlippagePercentage",
            ] },
        ],
    },
    "contract_recursion_limit": "1",
    "disable_auto_cache_key_gen": true,
    "files": [
        "certora/harnesses/StorageExtension.sol",
        "certora/harnesses/GenericVaultBridgeToken.sol",
        "certora/mocks/ILxLyBridgeMock.sol",
        "certora/mocks/TokenMock.sol",
        "certora/mocks/VaultMock.sol",
        "src/VaultBridgeTokenInitializer.sol",
        "src/VaultBridgeTokenPart2.sol",
    ],
    "server": "production",
    "global_timeout": "7200",
    "smt_timeout": "7200",
    "loop_iter": "2",
    "link": [
        "VaultMock:asset=TokenMock",
    ],
    "msg": "GenericVaultBridgeToken",
    "mutations": {
        "gambit": [
            {
                "filename": "src/vault-bridge-tokens/GenericVaultBridgeToken.sol",
                "num_mutants": 5
            }
        ]
    },
    "optimistic_contract_recursion": true,
    "optimistic_hashing": true,
    "optimistic_loop": true,
    "optimistic_summary_recursion": true,
    "packages": [
        "@types/bun=node_modules/@types/bun",
        "@0xpolygonhermez/zkevm-commonjs=node_modules/@0xpolygonhermez/zkevm-commonjs",
        "@openzeppelin-contracts-upgradeable=dependencies/@openzeppelin-contracts-upgradeable-5.1.0",
        "@openzeppelin-contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "@openzeppelin/contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "forge-std=dependencies/forge-std-1.9.4/src",
        // for zkmevm-contracts
        "@openzeppelin/contracts-upgradeable4=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable4",
        "@openzeppelin/contracts-upgradeable5=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable5",
        "@zkmcontractsv2=zkevm-contracts/contracts/v2",
    ],
    "process": "emv",
    "prover_args": [
        "-maxDecompiledCommandCount 5000000",
        "-maxBlockCount 500000",
    ],
    "rule_sanity": "basic",
    "prover_version": "master",
    "parametric_contracts": ["GenericVaultBridgeToken", "VaultBridgeTokenPart2"],
    "solc_map": {
        "StorageExtension": "solc8.29",
        "GenericVaultBridgeToken": "solc8.29",
        "MigrationManager": "solc8.29",
        "VaultBridgeTokenInitializer": "solc8.29",
        "VaultBridgeTokenPart2": "solc8.29",
        "ILxLyBridgeMock": "solc8.29",
        "VaultMock": "solc8.29",
        "TokenMock": "solc8.28",
    },
    "solc_optimize": "200",
    //"build_cache": true,
    "solc_via_ir": true,
    "storage_extension_harnesses": [
        "GenericVaultBridgeToken=StorageExtension",
        "VaultBridgeTokenInitializer=StorageExtension",
    ],
    "struct_link": [
        "GenericVaultBridgeToken:lxlyBridge=ILxLyBridgeMock",
        "GenericVaultBridgeToken:underlyingToken=TokenMock",
        "GenericVaultBridgeToken:yieldVault=VaultMock",
        "GenericVaultBridgeToken:_vaultBridgeTokenPart2=VaultBridgeTokenPart2",
        "VaultBridgeTokenInitializer:underlyingToken=TokenMock",
        "VaultBridgeTokenInitializer:yieldVault=VaultMock",
    ],
    "summary_recursion_limit": "2",
    "verify": "GenericVaultBridgeToken:certora/specs/GenericVaultBridgeToken_ERC4626.spec"
}
